base-config:
  id: base
  dir: ./isomorphic/base
  outdir: ./build

variation-config:
  variation-dirs:
    - ./isomorphic/variations
  # dir names should be unique across all roots or mendel throws
  variations:
    unexisting_folder:
    bucket_A:
      - unexisting_folder
    feature_B:
    partner_C:
    bucket_D:
      - partner_C

route-config:
  variation: /mendel/:variations/:bundle
  hash: /mendel/:hash/:bundle

transforms: # a list of all available transforms for all envs and types
  babel:
    plugin: mendel-transform-babel
    options:
      presets:
        - es2015
        - react
  uglyfy: # lazy to write the real one, will be faster if we have real uglify?
    plugin: mendel-transform-babel
    options:
      presets:
        - react
        - babili
  json-parse:
    plugin: mendel-parser-json

types:
  json:
    extensions:
      - .json
    parser: json-parse
    parser-to-type: js
  js:
    outlet:
      plugin: mendel-bundle-browser-pack
    transforms:
      - babel
    extensions:
      - .js
      - .jsx
  css:
    extensions:
      - .css

env:
  production:
    types:
      js:
        outlet:
          plugin: mendel-bundle-rollup
        transforms:
          - babel
          - uglyfy
        node_modules:
          - uglyfy

outlets:
  - id: manifest
    plugin: mendel-outlet-manifest
  - id: css
    plugin: mendel-outlet-css

# needs to be array because order is relevant
# if extract-bundles comes first, some node_modules that
#     only lazy bundle needs will be part of the lazy bundle
# if node-modules first, extract-bundles will operate on source files only
generators: # AKA graph transforms - or graph operations
  - id: extract-bundles
    plugin: mendel-generator-extract
  - id: node-modules-generator
    plugin: mendel-generator-node-modules

# "outfile" is optional and only needed for single layer generation
bundles:
  main:
    outlet: manifest
    outfile: main.js
    entries:
      - ./main.js
  vendor:
    outlet: manifest
    outfile: vendor.js
    generator: node-modules-generator
    all-bundles: true # expects only 1 bundle to apply this generator, or throws
                      # look for node_modules in every other bundle
  lazy:
    outlet: manifest
    outfile: lazy.js
    generator: extract-bundles
    extract-from: main
    extract-entries:
      - ./components/lazy
  css:
    outlet: css
    outfile: main.css
    entries:
      # needs to support glob
      - ./css/index.css
      - ./css/aux.css
